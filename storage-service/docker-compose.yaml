version: '3.8'
services:

  redis-master:
    image: redis:latest
    container_name: redis-master
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    networks:
      highload-network:
        ipv4_address: 10.5.0.4
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - STORAGE=${STORAGE}
      - REDIS_PASSWORD:${REDIS_PASSWORD}

  redis-replica0:
    image: redis
    container_name: redis-replica0
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6381 --slaveof 10.5.0.4 ${REDIS_PORT} --slave-read-only yes
    networks:
      highload-network:
        ipv4_address: 10.5.0.5
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis-master

  redis-replica1:
    image: redis
    container_name: redis-replica1
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6382 --slaveof 10.5.0.4 ${REDIS_PORT} --slave-read-only yes
    networks:
      highload-network:
        ipv4_address: 10.5.0.6
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis-master

  highload-service:
    image: storage-container
    container_name: service-container
    restart: unless-stopped
    networks:
      highload-network:
        ipv4_address: 10.5.0.7
    ports:
      - ${SERVER_SWAGGER_PORT}:${SERVER_PORT}

  highload-client:
    image: client-container
    command: get ab
    container_name: client-container
    restart: on-failure
    networks:
      highload-network:
        ipv4_address: 10.5.0.3

networks:
  highload-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
